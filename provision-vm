#!/usr/bin/env bash

set -eo pipefail

ram=1024
cpus=2
storage=/
disk=16
graphics=vnc,password=abc
blocking=--wait=-1
os=debian

while getopts ":r:c:smd:htWo:i" opt; do
	case $opt in
		r ) ram=$OPTARG;;
		c ) cpus=$OPTARG;;
		s ) storage=ssd/;;
		m ) storage=magnetic/;;
		d ) disk=$OPTARG;;
		h ) graphics=none;;
		t ) tty=console=ttyS0,115200;;
		W ) blocking="";;
		o ) os=$OPTARG;;
		i ) ip=1;;
		: ) echo "-$OPTARG requires an argument" >&2; exit 1;;
		\?) echo "Invalid option: -$OPTARG" >&2; exit 1;;
	esac
done

shift $((OPTIND - 1))

name=$1

if [ "$name" == "" ]; then
	echo "Name required" >&2
	exit 1
fi

if [ -n "$ip" ]; then
	virsh domifaddr \
		--source agent \
		--domain "$name" \
		--full \
	| sed -E 's/([0-9a-f]{2}(:[0-9a-f]{2}){5})/ \1/' \
	| sed -E -e 's/^\s+//' -e 's/\s{2,}/\t/g' \
	| grep -Ev '^Name|^-*$' \
	| sed -E 's/^([^\t]+)\t([^\t]+)\t([^\t]+)$/\1\tnone\t\2\t\3/' \
	| awk -F '\t' '
		$1 !~ /lo|docker|veth/ && $3 == "ipv4" {
			split($4,a,"/")
			print a[1]
		}
	'

	exit 0
fi

if [ "$os" == "debian" ]; then
	iso=debian-12.9.0-amd64-netinst.iso
	os_var=debian12
	cfg=preseed.cfg
	cfg_arg=auto=true
elif [ "$os" == "rhel" ]; then
	iso=rhel-9.5-x86_64-boot.iso
	os_var=rhel9.5
	cfg=ks.cfg
	cfg_arg=inst.ks=file:/ks.cfg
else
	echo "Invalid OS: '$os'. Valid options: debian, rhel" >&2
	exit 1
fi

config=$HOME/.virt-provisioning.json
if [ ! -f "$config" ]; then
	cp config.template.json "$config"
	echo "Please fill in configuration file: $config" >&2
	exit 1
fi

temp_dir=$(mktemp -d)
trap 'rm -rf $temp_dir' EXIT

jinja2 \
	-D "user=$USER" \
	-D "timezone=$(realpath --relative-to /usr/share/zoneinfo /etc/localtime)" \
	-D "fullname=$(getent passwd "$USER" | cut -d : -f 5 | cut -d , -f 1)" \
	"cfg/$os.cfg.j2" \
	"$config" \
	> "$temp_dir/$cfg"

base_dir=$(<"$config" jq --raw-output .host.baseDir)

virt-install \
	--name "$name" \
	--os-variant=$os_var \
	"--ram=$ram" \
	"--vcpus=$cpus" \
	--disk path="$base_dir/images/$storage$name.img,size=$disk" \
	--location "$base_dir/isos/$iso" \
	--network bridge:br0 \
	--graphics $graphics \
	--noautoconsole \
	"$blocking" \
	"--initrd-inject=$temp_dir/$cfg" \
	--extra-args="$cfg_arg hostname=$name domain=$(hostname -d) $tty"
